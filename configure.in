AC_INIT(desktop-properties)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-core, 0.30)

AM_MAINTAINER_MODE

AM_ACLOCAL_INCLUDE(macros)

dnl
dnl let applications configure for gnome
dnl
gnome_cv_use_gnome=yes

GNOME_INIT

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL
AC_PROG_CXX
AM_PROG_LEX
AC_PROG_YACC

GNOME_COMPILE_WARNINGS

GNOME_X_CHECKS
GNOME_GHTTP_CHECK

dnl utility conditional
AM_CONDITIONAL(FALSE, test "x" = "y")

ALL_LINGUAS="ca cs da de es fi fr ga it ja ko no pt sv"
AM_GNU_GETTEXT

AC_LINK_FILES($nls_cv_header_libgt, $nls_cv_header_intl)

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_CHECK_HEADERS(dlfcn.h dl.h)
AC_CHECK_LIB(dl, dlopen, DL_LIB="-ldl",[
AC_CHECK_LIB(dld, shl_load, DL_LIB="-ldld",[
AC_CHECK_FUNCS(dlopen, DL_LIB="",
AC_MSG_ERROR(Dynamic linking is not available on this platform.  Some
apps, like panel, will not run properly.))
])])
AC_SUBST(DL_LIB)

dnl properties-keyboard
AC_CHECK_HEADERS(X11/extensions/xf86misc.h, XF86MISC_LIBS="-lXxf86misc")
AC_SUBST(XF86MISC_LIBS)

for dir in `(IFS=:; for i in $PATH; do echo $i ; done)` ; do
  if test -f $dir/orbit-idl ; then
     orbit_prefix=`echo $dir | sed 's%/bin$%%' |sed 's%/bin/$%%'`
     break
  fi
done

ORB_LIBS="$ORBIT_LIBS"
ORB_CFLAGS="$ORBIT_CFLAGS"

AC_SUBST(ORB_LIBS)
AC_SUBST(ORB_CFLAGS)

dnl gnome-session
dnl $GNOME_HAVE_SM comes from GNOME_X_CHECKS
AM_CONDITIONAL(SESSION, test "$GNOME_HAVE_SM" = true)
AC_ARG_WITH(window-manager,
[  --with-window-manager=NAME
			   Specify default window manager],[
    WINDOW_MANAGER="$with_window_manager"], [
    dnl icewm is the default because it supports session management
    dnl and other Gnome requirements.
    WINDOW_MANAGER=icewm])
AC_SUBST(WINDOW_MANAGER)

dnl Check for libgtop
GNOME_LIBGTOP_HOOK(,applets_libgtop=yes)

if test x$applets_libgtop != xyes; then
  AC_MSG_WARN([*** \`cpuload' applet will not be built ***])
  AC_MSG_WARN([*** \`cpumemusage' applet will not be built ***])
  AC_MSG_WARN([*** \`diskusage' applet will not be built ***])
  AC_MSG_WARN([*** \`multiload' applet will not be built ***])
  AC_MSG_WARN([*** \`netload' applet will not be built ***])
fi

dnl Check for ghttp library
AM_CONDITIONAL(HAVE_LIBGHTTP, test -n "$GHTTP_LIB")
AC_SUBST(GHTTP_LIB)
if test -z "$GHTTP_LIB"; then
  AC_MSG_WARN([*** \`bussign' applet will not be built ***])
fi

dnl panel/cdplayer
AC_CANONICAL_HOST
case "$host" in
*linux*) CDROM_HOST=linux;;
*solaris*) CDROM_HOST=solaris;;
esac
AM_CONDITIONAL(APPLET_CDPLAYER, test -n "$CDROM_HOST")
AC_SUBST(CDROM_HOST)
if test -z "$CDROM_HOST"; then
  AC_MSG_WARN([*** \`cdplayer' applet will not be built ***])
fi

dnl panel/mixer
P_MIXER=
AC_CHECK_HEADERS(linux/soundcard.h,[P_MIXER=mixer],[
  AC_CHECK_HEADERS(machine/soundcard.h, [P_MIXER=mixer])])
AM_CONDITIONAL(APPLET_MIXER, test "$P_MIXER" = "mixer")
if test "$P_MIXER" != "mixer"; then
  AC_MSG_WARN([*** \`mixer' applet will not be built ***])
fi

dnl panel/modemlights
P_MODEMLIGHTS=
AC_CHECK_HEADERS(net/ppp_defs.h,[P_MODEMLIGHTS=modemlights])
AM_CONDITIONAL(APPLET_MODEMLIGHTS, test "$P_MODEMLIGHTS" = "modemlights")
if test "$P_MODEMLIGHTS" != "modemlights"; then
  AC_MSG_WARN([*** \`modemlights' applet will not be built ***])
fi

dnl fvwm-pager
dnl we need the fvwm sources to build it
AC_ARG_WITH(fvwm2,
[  --with-fvwm2=DIRECTORY	top level dir of fvwm2 with libs and includes],
	[FVWM_PAGER="fvwm-pager"], [FVWM_PAGER=""])

AM_CONDITIONAL(APPLET_FVWM_PAGER, test ! -z "$FVWM_PAGER")
if test ! -z "$FVWM_PAGER"
then
	for x_dir in /usr/local/src/fvwm2 /usr/local/src/fvwm-2.0.46 /disk/compiles/fvwm-2.0.46 ${with_fvwm2}
	do
		AC_MSG_CHECKING("for fvwm include files in ${x_dir}")
		if test -f "${x_dir}/fvwm/module.h"
		then
			AC_MSG_RESULT("found");
			break;
		else
			AC_MSG_RESULT("not found");
		fi
	done

	AC_MSG_CHECKING("for fvwm library ${x_dir}/libs/libfvwm2.a")
	if test -f ${x_dir}/libs/libfvwm2.a
	then
		AC_MSG_RESULT("found")
	else
		AC_MSG_ERROR(["You have to compile fvwm2 so that we can use the fvwm2 library.\
		This library is neceassry to compile fvwm-pager"])
	fi

	FVWM2INCLUDE="-I${x_dir}/"
	FVWM2LIBS="-L${x_dir}/libs -lfvwm2"
	AC_SUBST(FVWM2INCLUDE)
	AC_SUBST(FVWM2LIBS)
fi

dnl esd-manager
have_libesd=no
AM_PATH_ESD(,have_libesd=yes,
[AC_MSG_WARN([*** \`esd-manager' will not be built ***])])
AM_CONDITIONAL(HAVE_LIBESD, test yes = $have_libesd)

dnl help-browser
dnl I found `inet_aton' in -lresolv on solaris
oLIBS="$LIBS"
RES_LIBS=
# the following two are covered by X11 too.  If inet_aton is found in
# plain libc, -lsocket or -lnsl, RES_LIBS will be empty.
AC_CHECK_FUNC(connect,,[AC_CHECK_LIB(socket,connect)])
AC_CHECK_FUNC(gethostbyname,,[AC_CHECK_LIB(nsl,gethostbyname)])
AC_CHECK_FUNC(inet_aton,,[AC_CHECK_LIB(resolv,inet_aton,RES_LIBS="-lresolv")])
AC_SUBST(RES_LIBS)
LIBS="$oLIBS"

dnl AC_CONFIG_SUBDIRS(gemvt)

AC_OUTPUT([
Makefile
po/Makefile.in
macros/Makefile
panel/Makefile
applets/Makefile
applets/applet-dirs/Makefile
applets/asclock/Makefile
applets/gen_util/Makefile
applets/batmon/Makefile
applets/bussign/Makefile
applets/cdplayer/Makefile
applets/mixer/Makefile
applets/modemlights/Makefile
applets/multiload/Makefile
applets/cpuload/Makefile
applets/netload/Makefile
applets/cpumemusage/Makefile
applets/fish/Makefile
applets/gkb/Makefile
applets/diskusage/Makefile
applets/icewm-pager/Makefile
applets/gnome-pager/Makefile
applets/esd-manager/Makefile
applets/drivemount/Makefile
applets/clockmail/Makefile
applets/webcontrol/Makefile
applets/dialer/Makefile
applets/fifteen/Makefile
applets/battery/Makefile
applets/charpick/Makefile
applets/winlist/Makefile
applets/fvwm-pager/Makefile
applets/slashapp/Makefile
core-docs/Makefile
desktop-links/Makefile
desktop-properties/Makefile
gnome-terminal/Makefile
help-browser/Makefile
help-browser/gnome-man2html/Makefile
help-browser/gnome-info2html/Makefile
gmenu/Makefile
control-center/Makefile
capplets/Makefile
capplets/mouse-properties/Makefile
capplets/keyboard-properties/Makefile
capplets/desktop-links/Makefile
capplets/background-properties/Makefile
capplets/screensaver-properties/Makefile
capplets/screensaver-properties/screensaver-desktops/Makefile
capplets/sound-properties/Makefile
capplets/e-conf/Makefile
capplets/theme-switcher/Makefile
idl/Makefile
pixmaps/Makefile
gsm/Makefile
smproxy/Makefile
intl/Makefile],
[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])


