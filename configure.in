AC_INIT(gnome-panel)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-panel, 2.8.0)

dnl make sure we keep ACLOCAL_FLAGS around for maintainer builds to work
AC_SUBST(ACLOCAL_AMFLAGS, "$ACLOCAL_FLAGS")

# Before making a release, the LT_VERSION string should be modified.
# The string is of the form C:R:A.
# - If interfaces have been changed or added, but binary compatibility has
#   been preserved, change to C+1:0:A+1
# - If binary compatibility has been broken (eg removed or changed interfaces)
#   change to C+1:0:0
# - If the interface is the same as the previous version, change to C:R+1:A

LIB_PANEL_APPLET_LT_VERSION=0:19:0
AC_SUBST(LIB_PANEL_APPLET_LT_VERSION)

AM_MAINTAINER_MODE

AC_PROG_INTLTOOL([0.31])

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AC_PATH_PROGS(PATH_TO_XRDB, "xrdb")
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
AC_PATH_PROG(GCONFTOOL, gconftool-2)

AC_PATH_PROG(GDK_PIXBUF_CSOURCE, gdk-pixbuf-csource, no)
if test x"$GDK_PIXBUF_CSOURCE" = xno; then
  AC_MSG_ERROR([gdk-pixbuf-csource executable not found in your path - should be installed with GTK])
fi

GNOME_COMPILE_WARNINGS(yes)

AC_ARG_ENABLE(deprecations,
              [AC_HELP_STRING([--enable-deprecations],
                              [warn about deprecated usages [default=no]])],,
              [enable_deprecations=no])

if test "x$enable_deprecations" = "xyes"; then
   DISABLE_DEPRECATED_CFLAGS="\
-DG_DISABLE_DEPRECATED \
-DGDK_DISABLE_DEPRECATED \
-DGTK_DISABLE_DEPRECATED \
-DGDK_PIXBUF_DISABLE_DEPRECATED \
-DGNOME_DISABLE_DEPRECATED"
   AC_SUBST(DISABLE_DEPRECATED_CFLAGS)
fi

dnl If you add a version number here, you *must* add an AC_SUBST line for
dnl it too, or it will never make it into the spec file!

LIBGNOME_DESKTOP_REQUIRED=2.1.4
GDK_PIXBUF_REQUIRED=2.1.0
GTK_REQUIRED=2.3.2
LIBGLADE_REQUIRED=2.3.0
LIBGNOME_REQUIRED=2.1.1
LIBGNOMEUI_REQUIRED=2.5.4
LIBBONOBOUI_REQUIRED=2.1.1
ORBIT_REQUIRED=2.4.0
GNOME_VFS_REQUIRED=2.3.0
GNOME_VFS_MODULE_REQUIRED=2.1.3
LIBWNCK_REQUIRED=2.7.91
GCONF_REQUIRED=2.6.1

AC_SUBST(GTK_REQUIRED)
AC_SUBST(GDK_PIXBUF_REQUIRED)
AC_SUBST(LIBGLADE_REQUIRED)
AC_SUBST(LIBGNOME_REQUIRED)
AC_SUBST(ORBIT_REQUIRED)
AC_SUBST(GNOME_VFS_REQUIRED)
AC_SUBST(LIBWNCK_REQUIRED)
AC_SUBST(GCONF_REQUIRED)

dnl pkg-config dependency checks

PKG_CHECK_MODULES(PANEL, ORBit-2.0 >= $ORBIT_REQUIRED gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnome-2.0 >= $LIBGNOME_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED gnome-desktop-2.0 >= $LIBGNOME_DESKTOP_REQUIRED gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED gnome-vfs-module-2.0 >= $GNOME_VFS_MODULE_REQUIRED libglade-2.0 >= $LIBGLADE_REQUIRED gconf-2.0 >= $GCONF_REQUIRED)
AC_SUBST(PANEL_CFLAGS)
AC_SUBST(PANEL_LIBS)

PKG_CHECK_MODULES(PANEL_SCREENSHOT, gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED libglade-2.0 >= $LIBGLADE_REQUIRED)
AC_SUBST(PANEL_SCREENSHOT_CFLAGS)
AC_SUBST(PANEL_SCREENSHOT_LIBS)

PKG_CHECK_MODULES(LIBPANEL_APPLET, ORBit-2.0 >= $ORBIT_REQUIRED gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED libglade-2.0 >= $LIBGLADE_REQUIRED libbonoboui-2.0 >= $LIBBONOBOUI_REQUIRED)
AC_SUBST(LIBPANEL_APPLET_CFLAGS)
AC_SUBST(LIBPANEL_APPLET_LIBS)

PKG_CHECK_MODULES(WNCKLET, ORBit-2.0 >= $ORBIT_REQUIRED gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED libwnck-1.0 >= $LIBWNCK_REQUIRED libglade-2.0 >= $LIBGLADE_REQUIRED gnome-desktop-2.0 >= $LIBGNOME_DESKTOP_REQUIRED)
AC_SUBST(WNCKLET_CFLAGS)
AC_SUBST(WNCKLET_LIBS)

AC_ARG_ENABLE(eds,
	AC_HELP_STRING([--enable-eds],
		[Enable evolution-data-server dependencies @<:@default=auto@:>@]
	),,enable_eds=auto)
LIBECAL_REQUIREMENT=
if test "x$enable_eds" = "xyes"; then
  LIBECAL_REQUIREMENT="libecal-1.0 >= 0.0.97"
else
  if test "x$enable_eds" != "xno"; then
    AC_MSG_CHECKING(for evolution-data-server)
    if $PKG_CONFIG --exists libecal-1.0; then
       AC_MSG_RESULT(yes)
       LIBECAL_REQUIREMENT="libecal-1.0 >= 0.0.97"
    else
       AC_MSG_RESULT(no)
    fi
  fi
fi
if test -n "$LIBECAL_REQUIREMENT"; then
  AC_DEFINE([HAVE_LIBECAL], 1,
            [Defined when evolution-data-server libecal-1.0 is detected])
fi
AM_CONDITIONAL(HAVE_LIBECAL, test -n "$LIBECAL_REQUIREMENT")

PKG_CHECK_MODULES(CLOCK, gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED $LIBECAL_REQUIREMENT)
AC_SUBST(CLOCK_CFLAGS)
AC_SUBST(CLOCK_LIBS)

PKG_CHECK_MODULES(MAILCHECK, gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(MAILCHECK_CFLAGS)
AC_SUBST(MAILCHECK_LIBS)

PKG_CHECK_MODULES(FISH, gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED libglade-2.0 >= $LIBGLADE_REQUIRED)
AC_SUBST(FISH_CFLAGS)
AC_SUBST(FISH_LIBS)

dnl shape extenstion for gnome-panel-screenshot
savecppflags=$CPPFLAGS
CPPFLAGS="$CPPFLAGS $X_CFLAGS"
AC_CHECK_HEADERS(X11/extensions/shape.h, XSHAPE_LIBS="-lXext")
AC_SUBST(XSHAPE_LIBS)
CPPFLAGS=$savecppflags

# For egg-recent-files
AC_CHECK_FUNCS(lockf)

dnl X development libraries check

#
# If Pango included the shared library dependencies from X11 in
# the pkg-config output, then we use that (to avoid duplicates).
# but if they were omitted to avoid binary compatibility problems
# then we need to repeat the checks.
#
if $PKG_CONFIG --exists pangoxft ; then
  PANGO_PACKAGES="pangox pangoxft"
else
  PANGO_PACKAGES="pangox"
fi

x_libs="`$PKG_CONFIG --libs $PANGO_PACKAGES`"
case x_libs in
  *-lX11*) pango_omitted_x_deps=no ;;
  *)       pango_omitted_x_deps=yes ;;
esac

if test $pango_omitted_x_deps = yes ; then
  AC_PATH_XTRA

  if test x$no_x = xyes ; then
    AC_MSG_ERROR([X development libraries not found])
  else
    X_LIBS="$X_PRE_LIBS $X_LIBS -lX11 $X_EXTRA_LIBS"
  fi
fi

AC_SUBST(X_LIBS)

dnl IDL directories

ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

BONOBO_IDLDIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
AC_SUBST(BONOBO_IDLDIR)

BONOBO_ACT_IDLDIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
AC_SUBST(BONOBO_ACT_IDLDIR)

dnl  Language Support 

GETTEXT_PACKAGE=gnome-panel-2.0
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE")
AC_SUBST(GETTEXT_PACKAGE)

ALL_LINGUAS="af am ar az be bg bn bs ca cs cy da de el en_CA en_GB eo es et eu fa fi fr ga gl gu he hi hr hu id it ja ko li lt lv mi mk ml mn mr ms nb nl nn no pa pl pt pt_BR ro ru sk sl sq sr sr@ije sr@Latn sv ta th tr uk vi wa yi zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT


dnl Check for libpng

PNG_LIBS=
AC_CHECK_LIB(png, png_init_io, [
	     PNG_LIBS="-lpng"],[
	     AC_MSG_ERROR(libpng is required for gnome-panel)], -lm -lz)
AC_SUBST(PNG_LIBS)


dnl Place to look for KDE menus 

AC_ARG_WITH(kde-datadir, [  --with-kde-datadir=DIR  Location of KDE data])

if test "x$with_kde_datadir" = x ; then
  kde_datadir=/usr/share
else
  kde_datadir=$with_kde_datadir
fi

AC_DEFINE_UNQUOTED(KDE_MENUDIR, "$kde_datadir/applnk")
AC_DEFINE_UNQUOTED(KDE_ICONDIR, "$kde_datadir/icons")
AC_DEFINE_UNQUOTED(KDE_MINI_ICONDIR, "$kde_datadir/icons/mini")


dnl Place to look for KDE docs

AC_ARG_WITH(kde-docdir, [  --with-kde-docdir=DIR   Location of KDE documentation])

if test "x$with_kde_docdir" = x ; then
  kde_docdir=/usr/doc/kde
else
  kde_docdir=$with_kde_docdir
fi

AC_DEFINE_UNQUOTED(KDE_DOCDIR, "$kde_docdir")


dnl gtk-doc stuff

GTK_DOC_CHECK([1.0])

dnl scrollkeeper checks 

AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config. Please install the scrollkeeper package)
fi

AM_GCONF_SOURCE_2

dnl Don't use AC_PROG_AWK since we need the full pathname.
AC_PATH_PROGS(AWK, mawk gawk nawk awk, )
AC_PATH_PROGS(PERL, perl5 perl)

dnl define a MAINT-like variable REBUILD which is set if Perl
dnl and awk are found, so autogenerated sources can be rebuilt
AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds      disable all source autogeneration rules],,enable_rebuilds=yes)
REBUILD=\#
if test "x$enable_rebuilds" = "xyes" && \
     test -n "$PERL" && \
     $PERL -e 'exit !($] >= 5.002)' > /dev/null 2>&1 && \
     test -n "$AWK" ; then
  REBUILD=
fi
AC_SUBST(REBUILD)

AC_OUTPUT([
Makefile
gnome-panel.spec
idl/Makefile
icons/Makefile
gnome-panel/Makefile
libpanel-applet/libpanelapplet-2.0.pc
libpanel-applet/libpanelapplet-2.0-uninstalled.pc
libpanel-applet/Makefile
po/Makefile.in
applets/Makefile
applets/clock/Makefile
applets/clock/cut-n-paste/Makefile
applets/fish/Makefile
applets/notification_area/Makefile
applets/wncklet/Makefile
applets/wncklet/eel/Makefile
doc/Makefile
doc/reference/Makefile
doc/reference/panel-applet/Makefile
help/Makefile
help/C/Makefile
help/C/fish/Makefile
help/C/clock/Makefile
help/C/window-list/Makefile
help/C/workspace-switcher/Makefile
help/ja/Makefile
help/ja/fish/Makefile
help/ja/clock/Makefile
help/ja/window-list/Makefile
help/ja/workspace-switcher/Makefile
help/de/Makefile
help/de/fish/Makefile
help/de/clock/Makefile
help/de/window-list/Makefile
help/de/workspace-switcher/Makefile
help/es/Makefile
help/es/fish/Makefile
help/es/clock/Makefile
help/es/window-list/Makefile
help/es/workspace-switcher/Makefile
help/fr/Makefile
help/fr/fish/Makefile
help/fr/clock/Makefile
help/fr/window-list/Makefile
help/fr/workspace-switcher/Makefile
help/it/Makefile
help/it/fish/Makefile
help/it/clock/Makefile
help/it/window-list/Makefile
help/it/workspace-switcher/Makefile
help/sv/Makefile
help/sv/fish/Makefile
help/sv/clock/Makefile
help/sv/window-list/Makefile
help/sv/workspace-switcher/Makefile
help/ko/Makefile
help/ko/fish/Makefile
help/ko/clock/Makefile
help/ko/window-list/Makefile
help/ko/workspace-switcher/Makefile
help/zh_CN/Makefile
help/zh_CN/fish/Makefile
help/zh_CN/clock/Makefile
help/zh_CN/window-list/Makefile
help/zh_CN/workspace-switcher/Makefile
help/zh_TW/Makefile
help/zh_TW/fish/Makefile
help/zh_TW/clock/Makefile
help/zh_TW/window-list/Makefile
help/zh_TW/workspace-switcher/Makefile
man/Makefile
])

if echo foo | xgettext --from-code=UTF-8 -LC -o - - 2>/dev/null ; then
:;
else
echo "Warning: Your version of gettext does not support --from-code."
echo "         This will cause translation of some strings in non US-English"
echo "         locales to fail. For full support please upgrade to GNU"
echo "         gettext 0.12 or later."
echo
fi
