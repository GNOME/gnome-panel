AC_PREREQ(2.13)

AC_INIT(panel)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-core, 1.5.0)

AM_MAINTAINER_MODE
GNOME_COMMON_INIT

AC_PROG_INTLTOOL

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL
AM_PROG_LEX
AC_PROG_YACC
AC_PATH_PROGS(PATH_TO_XRDB, "xrdb")
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
AC_PATH_PROG(GCONFTOOL, gconftool-2)

dnl ==========================================================================
dnl
dnl Library Dependencies, uses pkg-config to detect correct version, etc
dnl
dnl ==========================================================================

GNOME_PLATFORM_GNOME_2(yes)
GNOME_COMPILE_WARNINGS(maximum)

dnl If you add a version number here, you *must* add an AC_SUBST line for
dnl it too, or it will never make it into the spec file!

GDK_PIXBUF_REQUIRED=1.3.1
GTK_REQUIRED=1.3.1
LIBCAPPLET_REQUIRED=1.4.0
LIBGLADE_REQUIRED=1.99.2
LIBGNOME_REQUIRED=1.96.0
LIBGNOMECANVAS_REQUIRED=1.102.0
LIBGNOMEUI_REQUIRED=1.96.0
LIBZVT_REQUIRED=1.97.0
ORBIT_REQUIRED=2.3.91
SCROLLKEEPER_REQUIRED=0.1.4
XML_REQUIRED=2.2.8
GNOME_VFS_MODULE_REQUIRED=1.9.3

AC_SUBST(GTK_REQUIRED)
AC_SUBST(GDK_PIXBUF_REQUIRED)
AC_SUBST(LIBGLADE_REQUIRED)
AC_SUBST(LIBGNOME_REQUIRED)
dnl AC_SUBST(LIBGNOME1COMPAT_REQUIRED)
AC_SUBST(LIBGNOMECANVAS_REQUIRED)
AC_SUBST(ORBIT_REQUIRED)
AC_SUBST(XML_REQUIRED)
AC_SUBST(LIBCAPPLET_REQUIRED)
AC_SUBST(LIBZVT_REQUIRED)
AC_SUBST(SCROLLKEEPER_REQUIRED)
AC_SUBST(GNOME_VFS_MODULE_REQUIRED)


dnl ================================
dnl | Pkg-Config dependency checks |---------------------------
dnl ================================

PKG_CHECK_MODULES(PANEL, ORBit-2.0 >= $ORBIT_REQUIRED gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(PANEL_CFLAGS)
AC_SUBST(PANEL_LIBS)

PKG_CHECK_MODULES(GNOME_DESKTOP, ORBit-2.0 >= $ORBIT_REQUIRED gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED gnome-vfs-module-2.0 >= $GNOME_VFS_MODULE_REQUIRED)
AC_SUBST(GNOME_DESKTOP_CFLAGS)
AC_SUBST(GNOME_DESKTOP_LIBS)

PKG_CHECK_MODULES(GNOME_ABOUT, gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED libgnomecanvas-2.0 >= $LIBGNOMECANVAS_REQUIRED)
AC_SUBST(GNOME_ABOUT_CFLAGS)
AC_SUBST(GNOME_ABOUT_LIBS)

	
PKG_CHECK_MODULES(GNOME_TERMINAL, ORBit-2.0 >= $ORBIT_REQUIRED gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED libzvt-2.0 >= $LIBZVT_REQUIRED libglade-2.0 >= $LIBGLADE_REQUIRED)
AC_SUBST(GNOME_TERMINAL_CFLAGS)
AC_SUBST(GNOME_TERMINAL_LIBS)

PKG_CHECK_MODULES(GNOME_SESSION, libgnomecanvas-2.0 >= $LIBGNOMECANVAS_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(GNOME_SESSION_CFLAGS)
AC_SUBST(GNOME_SESSION_LIBS)

dnl -----------------------------------------------------------

dnl
dnl libglade conversion script, needed by gnome-terminal
dnl
AC_PATH_PROG(LIBGLADE_CONVERT, libglade-convert)
if test -z $LIBGLADE_CONVERT; then
	AC_MSG_ERROR([libglade-convert (from libglade 2.0) is needed to build gnome-terminal.])
fi

dnl ================================
dnl | ORBit2 |---------------------------
dnl ================================

ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

BONOBO_IDLDIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
AC_SUBST(BONOBO_IDLDIR)

BONOBO_ACT_IDLDIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
AC_SUBST(BONOBO_ACT_IDLDIR)

dnl -----------------------------------------------------------

dnl  ------------------
dnl | Language Support |---------------------------------------
dnl  ------------------
GETTEXT_PACKAGE=gnome-core-2.0
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE")
AC_SUBST(GETTEXT_PACKAGE)

ALL_LINGUAS="az bg ca cs da de el en_GB es et eu fi fr ga gl hu it ja ko lt lv ms nl nn no pl pt pt_BR ro ru sk sl sp sr sv ta tr uk wa zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT
dnl -----------------------------------------------------------

dnl  -------------------------------
dnl | Headers |--------------------------
dnl  -------------------------------
AC_CHECK_HEADERS(syslog.h tcpd.h)
dnl -----------------------------------------------------------

dnl  ---------------
dnl | gnome-session |------------------------------------------
dnl  ---------------
dnl

AC_MSG_CHECKING([Whether libgnomeui was built with session management])
case "$GNOME_SESSION_LIBS" in
	*-lSM*)
		GNOME_HAVE_SM=yes
		;;
	*)
		GNOME_HAVE_SM=no
		;;
esac
AC_MSG_RESULT($GNOME_HAVE_SM)
if test "$GNOME_HAVE_SM" = no ; then
	AC_MSG_WARN([Session management support not built into libgnomeui; gnome-session will not be built])
fi
AM_CONDITIONAL(SESSION, test "$GNOME_HAVE_SM" = yes)
dnl -----------------------------------------------------------


dnl  -------------------
dnl | Use TCP Wrappers? |--------------------------------------
dnl  -------------------
AC_MSG_CHECKING(whether to use TCP wrappers)
LIBWRAP_PATH=""
for I in $LDFLAGS $LIBS -L/usr/lib -L/usr/local/lib; do
        case "$I" in
        -L*)
        THEFILE="`echo $I | sed -e 's,^-L,,'`"
        echo "From $I, checking in dir $THEFILE for libwrap.a" 1>&5
        if test -f $THEFILE/libwrap.a; then
                LIBWRAP_PATH="$THEFILE"
                echo "Found in $LIBWRAP_PATH" 1>&5
                break
        fi
	        esac
done
if test -n "$LIBWRAP_PATH"; then
        AC_MSG_RESULT(yes)
else
        AC_MSG_RESULT(no)
fi

if test -n "$LIBWRAP_PATH"; then
        nm $LIBWRAP_PATH/libwrap.* | grep 'T setenv' && LIBWRAP_PATH=""
        if test -z "$LIBWRAP_PATH"; then
                echo "*********************************************************"
                echo " You have a broken TCP wrappers library (setenv included)"
                echo " Please get the latest TCP wrappers package from your OS"
                echo " vendor, or recompile TCP wrappers to not include a"
                echo " setenv() implementation."
                echo
                echo "Not using TCP wrappers after all."
                echo "*********************************************************"
        fi
fi
dnl We need the header files too!
if test "$ac_cv_header_syslog_h" != yes || test "$ac_cv_header_tcpd_h" != yes; then
	echo "Resetting $LIBWRAP_PATH because syslog is $ac_cv_header_syslog_h and tcpd is $ac_cv_header_tcpd_h" 1>&5
	LIBWRAP_PATH=""
fi

dnl find out if we need -lnsl or whatever
LIBWRAP_NSL=
if test -n "$LIBWRAP_PATH"; then
        AC_MSG_CHECKING(whether -lwrap requires -lnsl)
        ORIG_LIBS="$LIBS"
        LIBS="-L$LIBWRAP_PATH -lwrap $LIBS"
        AC_TRY_LINK([
extern int hosts_access;
int allow_severity, deny_severity;
], [return hosts_access;], ,[
dnl try with -lnsl
OLD_LIBS="$LIBS"
LIBS="$LIBS -lnsl"
AC_TRY_LINK([
extern int hosts_access;
int allow_severity, deny_severity;
], [return hosts_access;], LIBWRAP_NSL="-lnsl",
LIBWRAP_PATH="")
LIBS="$OLD_LIBS"
])
        LIBS="$ORIG_LIBS"
if test -n "$LIB_NSL"; then
        AC_MSG_RESULT(yes)
        LIBS="$LIBS $LIB_NSL"
else
        AC_MSG_RESULT(no)
fi
fi
LIBWRAP_LIBS=
if test -n "$LIBWRAP_PATH"; then
	LIBWRAP_LIBS="-L$LIBWRAP_PATH -lwrap $LIBWRAP_NSL"
	AC_DEFINE(HAVE_HOSTS_ACCESS)
fi
AC_SUBST(LIBWRAP_LIBS)
dnl -----------------------------------------------------------



dnl  -------------------------
dnl | Choose a Window Manager |--------------------------------
dnl  -------------------------
AC_ARG_WITH(window-manager,
[  --with-window-manager=NAME
			  Specify default window manager],[
    WINDOW_MANAGER="$with_window_manager"], [
    dnl gnome-wm is a shell script that starts the WM.
    WINDOW_MANAGER=gnome-wm])
AC_SUBST(WINDOW_MANAGER)
dnl -----------------------------------------------------------



dnl  ------------------------
dnl | X11 Xinerama extension |---------------------------------
dnl  ------------------------
AC_ARG_ENABLE(xinerama,
  [  --disable-xinerama      Disable Xinerama support],,
  with_xinerama=yes)
XINERAMA_LIBS=
if test x$with_xinerama != xno ; then
	AC_CHECK_HEADER(X11/extensions/Xinerama.h, [
		AC_CHECK_LIB(Xinerama, XineramaQueryScreens, [
		     	AC_DEFINE(HAVE_LIBXINERAMA)
		     	XINERAMA_LIBS="-lXinerama"
		     	XINERAMA_SUPPORT=yes],, $GTK_LIBS)
	])
fi
AC_SUBST(XINERAMA_LIBS)
dnl -----------------------------------------------------------


dnl  ------------------
dnl | Check for libbz2 |---------------------------------------
dnl  ------------------
oLIBS="$LIBS"
BZ_LIBS=""
AC_CHECK_LIB(bz2, bzopen, [
	AC_DEFINE(HAVE_LIBBZ2)
	LIBS=$oLIBS
	BZ_LIBS="-lbz2"
	], AC_CHECK_LIB(bz2, BZ2_bzopen, [
	   AC_DEFINE(HAVE_LIBBZ2)
	   AC_DEFINE(HAVE_LIBBZ2_1_0)
	   LIBS=$oLIBS
	   BZ_LIBS="-lbz2"
	   ], AC_MSG_WARN([Recent enough BZ2 library not found. Help-Browser will not be able to read bzipped man/info pages])
))
AC_SUBST(BZ_LIBS)
dnl -----------------------------------------------------------

dnl  -----------------------------
dnl | Place to look for KDE menus |----------------------------
dnl  -----------------------------
AC_ARG_WITH(kde-datadir, [  --with-kde-datadir=DIR  Location of KDE data])

if test "x$with_kde_datadir" = x ; then
  kde_datadir=/usr/share
else
  kde_datadir=$with_kde_datadir
fi

AC_DEFINE_UNQUOTED(KDE_MENUDIR, "$kde_datadir/applnk")
AC_DEFINE_UNQUOTED(KDE_ICONDIR, "$kde_datadir/icons")
AC_DEFINE_UNQUOTED(KDE_MINI_ICONDIR, "$kde_datadir/icons/mini")
dnl -----------------------------------------------------------


dnl  ----------------------------
dnl | Place to look for KDE docs |-----------------------------
dnl  ----------------------------
AC_ARG_WITH(kde-docdir, [  --with-kde-docdir=DIR   Location of KDE documentation])

if test "x$with_kde_docdir" = x ; then
  kde_docdir=/usr/doc/kde
else
  kde_docdir=$with_kde_docdir
fi

AC_DEFINE_UNQUOTED(KDE_DOCDIR, "$kde_docdir")
dnl -----------------------------------------------------------


dnl  ---------------
dnl | gtk-doc stuff |------------------------------------------
dnl  ---------------

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)
AM_CONDITIONAL(HAVE_GTK_DOC, $GTKDOC)
AC_SUBST(HAVE_GTK_DOC)

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc        Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no
  fi
fi
dnl NOTE: We need to use a separate automake conditional for this
dnl       to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)
dnl -----------------------------------------------------------

dnl Specify the gconf configuration source,
dnl default to xml::$(sysconfdir)/gconf/gconf.xml.defaults

GCONF_CONFIG_SOURCE=

AC_ARG_ENABLE(gconf-source, [  --enable-gconf-source=sourceaddress Where to install schema files.], GCONF_CONFIG_SOURCE=$enable_gconf_source,)

if test "x$GCONF_CONFIG_SOURCE" = "x"; then
	GCONF_CONFIG_SOURCE="xml::\${sysconfdir}/gconf/gconf.xml.defaults"
fi

AC_SUBST(GCONF_CONFIG_SOURCE)
AC_SUBST(INSTALL_GCONF_CONFIG_SOURCE)

dnl  --------------------------------------------------------
dnl | Solaris does not have IceListenForWellKnownConnections |-
dnl  --------------------------------------------------------
oLIBS="$LIBS"
LIBS="$GNOME_SESSION_LIBS"
AC_CHECK_FUNCS(_IceTransNoListen)
LIBS="$oLIBS"
dnl -----------------------------------------------------------


dnl  ------------------------
dnl | HACK to expand datadir |---------------------------------
dnl  ------------------------
ICONDIR=`eval echo "${datadir}/pixmaps"`
AC_DEFINE_UNQUOTED(GNOME_ICONDIR,"${ICONDIR}")
dnl -----------------------------------------------------------


dnl  -------------
dnl | Build Flags |--------------------------------------------
dnl  -------------
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
dnl -----------------------------------------------------------

dnl Don't use AC_PROG_AWK since we need the full pathname.
AC_PATH_PROGS(AWK, mawk gawk nawk awk, )
AC_PATH_PROGS(PERL, perl5 perl)

# define a MAINT-like variable REBUILD which is set if Perl
# and awk are found, so autogenerated sources can be rebuilt
AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds      disable all source autogeneration rules],,enable_rebuilds=yes)
REBUILD=\#
if test "x$enable_rebuilds" = "xyes" && \
     test -n "$PERL" && \
     $PERL -e 'exit !($] >= 5.002)' > /dev/null 2>&1 && \
     test -n "$AWK" ; then
  REBUILD=
fi
AC_SUBST(REBUILD)

AC_OUTPUT([
Makefile
gnome-core.spec
gnome-about/Makefile
gnome-desktop/Makefile
gnome-terminal/Makefile
gsm/Makefile
gsm/default.session.5
gsm/gnome-session.1
idl/Makefile
panel/Makefile
panel/libpanelapplet-2.0.pc
po/Makefile.in
smproxy/Makefile
pixmaps/Makefile
])

dnl panel/config/Makefile
dnl panel/doc/Makefile
dnl panel/help/Makefile
dnl panel/help/C/Makefile
dnl panel/help/de/Makefile
dnl panel/help/it/Makefile
dnl panel/help/ja/Makefile
dnl applets/Makefile
dnl applets/applet-dirs/Makefile
dnl applets/gen_util/Makefile
dnl applets/gen_util/help/Makefile
dnl applets/gen_util/help/C/Makefile
dnl applets/gen_util/help/C/clock/Makefile
dnl applets/gen_util/help/C/mailcheck/Makefile
dnl applets/gen_util/help/C/printer/Makefile
dnl applets/gen_util/help/de/Makefile
dnl applets/gen_util/help/no/Makefile
dnl applets/gen_util/help/da/Makefile
dnl applets/gen_util/help/da/clock/Makefile
dnl applets/gen_util/help/da/mailcheck/Makefile
dnl applets/gen_util/help/da/printer/Makefile
dnl applets/gen_util/help/es/Makefile
dnl applets/gen_util/help/es/printer/Makefile
dnl applets/gen_util/help/it/Makefile
dnl applets/gen_util/help/it/clock/Makefile
dnl applets/gen_util/help/it/mailcheck/Makefile
dnl applets/gen_util/help/it/printer/Makefile
dnl applets/fish/Makefile
dnl applets/fish/help/Makefile
dnl applets/fish/help/C/Makefile
dnl applets/fish/help/no/Makefile
dnl applets/fish/help/da/Makefile
dnl applets/fish/help/it/Makefile
dnl applets/desk-guide/Makefile
dnl applets/desk-guide/help/Makefile
dnl applets/desk-guide/help/C/Makefile
dnl applets/desk-guide/help/de/Makefile
dnl applets/desk-guide/help/it/Makefile
dnl applets/tasklist/Makefile
dnl applets/tasklist/help/Makefile
dnl applets/tasklist/help/C/Makefile
dnl core-docs/Makefile
dnl core-docs/fdl/Makefile
dnl core-docs/fdl/C/Makefile
dnl core-docs/gpl/Makefile
dnl core-docs/gpl/C/Makefile
dnl core-docs/lgpl/Makefile
dnl core-docs/lgpl/C/Makefile
dnl core-docs/gnome-feedback/Makefile
dnl core-docs/gnome-feedback/C/Makefile
dnl desktop-links/Makefile
dnl gnome-terminal/C/Makefile
dnl gnome-terminal/de/Makefile
dnl gnome-terminal/da/Makefile
dnl gnome-terminal/es/Makefile
dnl gnome-terminal/it/Makefile
dnl gnome-terminal/no/Makefile
dnl help-browser/Makefile
dnl help-browser/gnome-man2html/Makefile
dnl help-browser/gnome-info2html/Makefile
dnl help-browser/help/Makefile
dnl help-browser/help/C/Makefile
dnl help-browser/help/ca/Makefile
dnl help-browser/help/da/Makefile
dnl help-browser/help/el/Makefile
dnl help-browser/help/es/Makefile
dnl help-browser/help/et/Makefile
dnl help-browser/help/eu/Makefile
dnl help-browser/help/hu/Makefile
dnl help-browser/help/fr/Makefile
dnl help-browser/help/gl/Makefile
dnl help-browser/help/it/Makefile
dnl help-browser/help/ja/Makefile
dnl help-browser/help/ko/Makefile
dnl help-browser/help/lt/Makefile
dnl help-browser/help/no/Makefile
dnl help-browser/help/uk/Makefile
dnl help-browser/help/wa/Makefile
dnl gnome-hint/Makefile
dnl gmenu/Makefile
dnl gnome-edit/Makefile
dnl gsm/Makefile
dnl gsm/help/Makefile
dnl gsm/help/C/Makefile
dnl gsm/help/ja/Makefile
dnl smproxy/Makefile
dnl omf-install/Makefile])

